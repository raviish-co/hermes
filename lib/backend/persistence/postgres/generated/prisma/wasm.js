
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CategoryScalarFieldEnum = {
  categoryId: 'categoryId',
  name: 'name',
  description: 'description',
  variations: 'variations'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  departmentId: 'departmentId',
  name: 'name'
};

exports.Prisma.SectionScalarFieldEnum = {
  sectionId: 'sectionId',
  name: 'name'
};

exports.Prisma.ProductScalarFieldEnum = {
  productId: 'productId',
  name: 'name',
  price: 'price',
  categoryId: 'categoryId',
  sectionId: 'sectionId',
  tags: 'tags',
  fulltext: 'fulltext'
};

exports.Prisma.ProductVariationsScalarFieldEnum = {
  id: 'id',
  variationId: 'variationId',
  value: 'value',
  productId: 'productId'
};

exports.Prisma.GoodsReceiptNoteScalarFieldEnum = {
  noteId: 'noteId',
  entryDate: 'entryDate',
  userId: 'userId'
};

exports.Prisma.GoodsReceiptNoteLineScalarFieldEnum = {
  noteId: 'noteId',
  lineId: 'lineId',
  productId: 'productId',
  goodQuantities: 'goodQuantities',
  badQuantities: 'badQuantities',
  comments: 'comments',
  consignmentValue: 'consignmentValue',
  itemStockType: 'itemStockType'
};

exports.Prisma.GoodsIssueNoteScalarFieldEnum = {
  noteId: 'noteId',
  issuedAt: 'issuedAt',
  returnDate: 'returnDate',
  status: 'status',
  total: 'total',
  securityDeposit: 'securityDeposit',
  fulltext: 'fulltext',
  userId: 'userId'
};

exports.Prisma.GoodsIssueNoteLineScalarFieldEnum = {
  noteId: 'noteId',
  lineId: 'lineId',
  productId: 'productId',
  name: 'name',
  price: 'price',
  goodQuantities: 'goodQuantities',
  badQuantities: 'badQuantities',
  goodQuantitiesReturned: 'goodQuantitiesReturned',
  badQuantitiesReturned: 'badQuantitiesReturned',
  netTotal: 'netTotal',
  comments: 'comments',
  variations: 'variations'
};

exports.Prisma.PurposeScalarFieldEnum = {
  id: 'id',
  description: 'description',
  notes: 'notes',
  details: 'details',
  noteId: 'noteId'
};

exports.Prisma.GoodsReturnNoteScalarFieldEnum = {
  noteId: 'noteId',
  goodsIssueNoteId: 'goodsIssueNoteId',
  securityDepositWithheld: 'securityDepositWithheld',
  issuedAt: 'issuedAt',
  userId: 'userId'
};

exports.Prisma.GoodsReturnNoteLineScalarFieldEnum = {
  noteId: 'noteId',
  lineId: 'lineId',
  description: 'description',
  productId: 'productId',
  goodQuantities: 'goodQuantities',
  badQuantities: 'badQuantities',
  variations: 'variations',
  comments: 'comments'
};

exports.Prisma.StockScalarFieldEnum = {
  stockId: 'stockId',
  productId: 'productId',
  goodQuantities: 'goodQuantities',
  badQuantities: 'badQuantities',
  consignmentValue: 'consignmentValue',
  totalValueOfOutputs: 'totalValueOfOutputs',
  itemStockType: 'itemStockType'
};

exports.Prisma.SequenceScalarFieldEnum = {
  name: 'name',
  value: 'value'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  Category: 'Category',
  Department: 'Department',
  Section: 'Section',
  Product: 'Product',
  ProductVariations: 'ProductVariations',
  GoodsReceiptNote: 'GoodsReceiptNote',
  GoodsReceiptNoteLine: 'GoodsReceiptNoteLine',
  GoodsIssueNote: 'GoodsIssueNote',
  GoodsIssueNoteLine: 'GoodsIssueNoteLine',
  Purpose: 'Purpose',
  GoodsReturnNote: 'GoodsReturnNote',
  GoodsReturnNoteLine: 'GoodsReturnNoteLine',
  Stock: 'Stock',
  Sequence: 'Sequence'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/spaulino/workspace/zafir-co-ao/github.com/hermes/lib/backend/persistence/postgres/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/spaulino/workspace/zafir-co-ao/github.com/hermes/lib/backend/persistence/postgres/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "NUXT_DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"NUXT_DATABASE_URL\")\n}\n\nmodel Category {\n  categoryId  String    @id @unique @map(\"category_id\")\n  name        String\n  description String?\n  variations  String?\n  products    Product[]\n\n  @@map(\"categories\")\n}\n\nmodel Department {\n  departmentId String @id @unique @map(\"department_id\")\n  name         String\n\n  @@map(\"departments\")\n}\n\nmodel Section {\n  sectionId String    @id @unique @map(\"section_id\")\n  name      String\n  products  Product[]\n\n  @@map(\"sections\")\n}\n\nmodel Product {\n  productId        String                 @id @unique @map(\"product_id\")\n  name             String\n  price            Float\n  categoryId       String?                @map(\"category_id\")\n  sectionId        String?                @map(\"section_id\")\n  category         Category?              @relation(fields: [categoryId], references: [categoryId])\n  section          Section?               @relation(fields: [sectionId], references: [sectionId])\n  tags             String?\n  variations       ProductVariations[]\n  receiptNoteLines GoodsReceiptNoteLine[]\n  issueNoteLines   GoodsIssueNoteLine[]\n  returnLines      GoodsReturnNoteLine[]\n  stock            Stock?\n  fulltext         String\n\n  @@map(\"products\")\n}\n\nmodel ProductVariations {\n  id          Int     @id @default(autoincrement())\n  variationId String  @map(\"variation_id\")\n  value       String\n  product     Product @relation(fields: [productId], references: [productId])\n  productId   String  @map(\"product_id\")\n\n  @@map(\"product_variations\")\n}\n\nmodel GoodsReceiptNote {\n  noteId    String                 @id @unique @map(\"note_id\")\n  entryDate DateTime               @map(\"entry_date\")\n  lines     GoodsReceiptNoteLine[]\n  userId    String                 @map(\"user_id\")\n\n  @@map(\"goods_receipt_notes\")\n}\n\nmodel GoodsReceiptNoteLine {\n  note             GoodsReceiptNote @relation(fields: [noteId], references: [noteId])\n  noteId           String           @map(\"note_id\")\n  lineId           String           @id @unique @map(\"line_id\")\n  product          Product          @relation(fields: [productId], references: [productId])\n  productId        String           @map(\"product_id\")\n  goodQuantities   Int              @default(0) @map(\"good_quantities\")\n  badQuantities    Int              @default(0) @map(\"bad_quantities\")\n  comments         String?\n  consignmentValue Float            @default(0) @map(\"consignment_value\")\n  itemStockType    String           @default(\"\") @map(\"item_stock_type\")\n\n  @@map(\"goods_receipt_note_lines\")\n}\n\nmodel GoodsIssueNote {\n  noteId           String               @id @unique @map(\"note_id\")\n  issuedAt         DateTime             @map(\"issued_at\")\n  returnDate       DateTime             @map(\"return_date\")\n  status           String\n  total            Float\n  securityDeposit  Float                @map(\"security_deposit\")\n  fulltext         String\n  purpose          Purpose?\n  userId           String               @map(\"user_id\")\n  lines            GoodsIssueNoteLine[]\n  goodsReturnNotes GoodsReturnNote[]\n\n  @@map(\"goods_issue_notes\")\n}\n\nmodel GoodsIssueNoteLine {\n  note                   GoodsIssueNote @relation(fields: [noteId], references: [noteId])\n  noteId                 String         @map(\"note_id\")\n  lineId                 String         @id @unique @map(\"line_id\")\n  product                Product        @relation(fields: [productId], references: [productId])\n  productId              String         @map(\"product_id\")\n  name                   String\n  price                  Float\n  goodQuantities         Int            @default(0) @map(\"good_quantities\")\n  badQuantities          Int            @default(0) @map(\"bad_quantities\")\n  goodQuantitiesReturned Int            @default(0) @map(\"good_quantities_returned\")\n  badQuantitiesReturned  Int            @default(0) @map(\"bad_quantities_returned\")\n  netTotal               Float          @map(\"net_total\")\n  comments               String?\n  variations             Json?\n\n  @@map(\"goods_issue_note_lines\")\n}\n\nmodel Purpose {\n  id          Int            @id @default(autoincrement())\n  description String\n  notes       String\n  details     String?\n  note        GoodsIssueNote @relation(fields: [noteId], references: [noteId])\n  noteId      String         @unique @map(\"note_id\")\n\n  @@map(\"purposes\")\n}\n\nmodel GoodsReturnNote {\n  noteId                  String                @id @unique\n  goodsIssueNote          GoodsIssueNote        @relation(fields: [goodsIssueNoteId], references: [noteId])\n  goodsIssueNoteId        String                @map(\"goods_issue_note_id\")\n  securityDepositWithheld Int                   @map(\"security_deposity_with_held\")\n  issuedAt                DateTime              @map(\"issued_at\")\n  lines                   GoodsReturnNoteLine[]\n  userId                  String                @map(\"user_id\")\n\n  @@map(\"goods_return_note\")\n}\n\nmodel GoodsReturnNoteLine {\n  note           GoodsReturnNote @relation(fields: [noteId], references: [noteId])\n  noteId         String          @map(\"note_id\")\n  lineId         String          @id @unique @map(\"line_id\")\n  description    String\n  product        Product         @relation(fields: [productId], references: [productId])\n  productId      String          @map(\"product_id\")\n  goodQuantities Int             @default(0) @map(\"good_quantities\")\n  badQuantities  Int             @default(0) @map(\"bad_quantities\")\n  variations     Json?\n  comments       String?\n\n  @@map(\"goods_return_lines\")\n}\n\nmodel Stock {\n  stockId             String  @id @unique @map(\"stock_id\")\n  product             Product @relation(fields: [productId], references: [productId])\n  productId           String  @unique @map(\"product_id\")\n  goodQuantities      Int     @default(0) @map(\"good_quantities\")\n  badQuantities       Int     @default(0) @map(\"bad_quantities\")\n  consignmentValue    Float   @map(\"consignment_value\")\n  totalValueOfOutputs Float   @default(0) @map(\"total_value_of_outputs\")\n  itemStockType       String  @default(\"\") @map(\"item_stock_type\")\n\n  @@map(\"stock_of_products\")\n}\n\nmodel Sequence {\n  name  String @id @unique\n  value Int\n\n  @@map(\"sequences\")\n}\n",
  "inlineSchemaHash": "e98137e56e4fc19fe237543e9656ca867f6913b3c2698e965f91a3874919c0aa",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Category\":{\"fields\":[{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"category_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"}],\"dbName\":\"categories\"},\"Department\":{\"fields\":[{\"name\":\"departmentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"department_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"departments\"},\"Section\":{\"fields\":[{\"name\":\"sectionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"section_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToSection\"}],\"dbName\":\"sections\"},\"Product\":{\"fields\":[{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"category_id\"},{\"name\":\"sectionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"section_id\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"section\",\"kind\":\"object\",\"type\":\"Section\",\"relationName\":\"ProductToSection\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variations\",\"kind\":\"object\",\"type\":\"ProductVariations\",\"relationName\":\"ProductToProductVariations\"},{\"name\":\"receiptNoteLines\",\"kind\":\"object\",\"type\":\"GoodsReceiptNoteLine\",\"relationName\":\"GoodsReceiptNoteLineToProduct\"},{\"name\":\"issueNoteLines\",\"kind\":\"object\",\"type\":\"GoodsIssueNoteLine\",\"relationName\":\"GoodsIssueNoteLineToProduct\"},{\"name\":\"returnLines\",\"kind\":\"object\",\"type\":\"GoodsReturnNoteLine\",\"relationName\":\"GoodsReturnNoteLineToProduct\"},{\"name\":\"stock\",\"kind\":\"object\",\"type\":\"Stock\",\"relationName\":\"ProductToStock\"},{\"name\":\"fulltext\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"products\"},\"ProductVariations\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"variationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"variation_id\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductVariations\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_id\"}],\"dbName\":\"product_variations\"},\"GoodsReceiptNote\":{\"fields\":[{\"name\":\"noteId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"note_id\"},{\"name\":\"entryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"entry_date\"},{\"name\":\"lines\",\"kind\":\"object\",\"type\":\"GoodsReceiptNoteLine\",\"relationName\":\"GoodsReceiptNoteToGoodsReceiptNoteLine\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"}],\"dbName\":\"goods_receipt_notes\"},\"GoodsReceiptNoteLine\":{\"fields\":[{\"name\":\"note\",\"kind\":\"object\",\"type\":\"GoodsReceiptNote\",\"relationName\":\"GoodsReceiptNoteToGoodsReceiptNoteLine\"},{\"name\":\"noteId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"note_id\"},{\"name\":\"lineId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"line_id\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"GoodsReceiptNoteLineToProduct\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_id\"},{\"name\":\"goodQuantities\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"good_quantities\"},{\"name\":\"badQuantities\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"bad_quantities\"},{\"name\":\"comments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consignmentValue\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"consignment_value\"},{\"name\":\"itemStockType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"item_stock_type\"}],\"dbName\":\"goods_receipt_note_lines\"},\"GoodsIssueNote\":{\"fields\":[{\"name\":\"noteId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"note_id\"},{\"name\":\"issuedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"issued_at\"},{\"name\":\"returnDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"return_date\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"securityDeposit\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"security_deposit\"},{\"name\":\"fulltext\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purpose\",\"kind\":\"object\",\"type\":\"Purpose\",\"relationName\":\"GoodsIssueNoteToPurpose\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"lines\",\"kind\":\"object\",\"type\":\"GoodsIssueNoteLine\",\"relationName\":\"GoodsIssueNoteToGoodsIssueNoteLine\"},{\"name\":\"goodsReturnNotes\",\"kind\":\"object\",\"type\":\"GoodsReturnNote\",\"relationName\":\"GoodsIssueNoteToGoodsReturnNote\"}],\"dbName\":\"goods_issue_notes\"},\"GoodsIssueNoteLine\":{\"fields\":[{\"name\":\"note\",\"kind\":\"object\",\"type\":\"GoodsIssueNote\",\"relationName\":\"GoodsIssueNoteToGoodsIssueNoteLine\"},{\"name\":\"noteId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"note_id\"},{\"name\":\"lineId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"line_id\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"GoodsIssueNoteLineToProduct\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"goodQuantities\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"good_quantities\"},{\"name\":\"badQuantities\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"bad_quantities\"},{\"name\":\"goodQuantitiesReturned\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"good_quantities_returned\"},{\"name\":\"badQuantitiesReturned\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"bad_quantities_returned\"},{\"name\":\"netTotal\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"net_total\"},{\"name\":\"comments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variations\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"goods_issue_note_lines\"},\"Purpose\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"object\",\"type\":\"GoodsIssueNote\",\"relationName\":\"GoodsIssueNoteToPurpose\"},{\"name\":\"noteId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"note_id\"}],\"dbName\":\"purposes\"},\"GoodsReturnNote\":{\"fields\":[{\"name\":\"noteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"goodsIssueNote\",\"kind\":\"object\",\"type\":\"GoodsIssueNote\",\"relationName\":\"GoodsIssueNoteToGoodsReturnNote\"},{\"name\":\"goodsIssueNoteId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"goods_issue_note_id\"},{\"name\":\"securityDepositWithheld\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"security_deposity_with_held\"},{\"name\":\"issuedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"issued_at\"},{\"name\":\"lines\",\"kind\":\"object\",\"type\":\"GoodsReturnNoteLine\",\"relationName\":\"GoodsReturnNoteToGoodsReturnNoteLine\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"}],\"dbName\":\"goods_return_note\"},\"GoodsReturnNoteLine\":{\"fields\":[{\"name\":\"note\",\"kind\":\"object\",\"type\":\"GoodsReturnNote\",\"relationName\":\"GoodsReturnNoteToGoodsReturnNoteLine\"},{\"name\":\"noteId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"note_id\"},{\"name\":\"lineId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"line_id\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"GoodsReturnNoteLineToProduct\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_id\"},{\"name\":\"goodQuantities\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"good_quantities\"},{\"name\":\"badQuantities\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"bad_quantities\"},{\"name\":\"variations\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"comments\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"goods_return_lines\"},\"Stock\":{\"fields\":[{\"name\":\"stockId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"stock_id\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToStock\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_id\"},{\"name\":\"goodQuantities\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"good_quantities\"},{\"name\":\"badQuantities\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"bad_quantities\"},{\"name\":\"consignmentValue\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"consignment_value\"},{\"name\":\"totalValueOfOutputs\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"total_value_of_outputs\"},{\"name\":\"itemStockType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"item_stock_type\"}],\"dbName\":\"stock_of_products\"},\"Sequence\":{\"fields\":[{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":\"sequences\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    NUXT_DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['NUXT_DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.NUXT_DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

